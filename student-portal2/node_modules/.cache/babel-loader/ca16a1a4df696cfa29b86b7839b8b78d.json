{"ast":null,"code":"var _jsxFileName = \"/Users/Danny/Documents/student-portal2/src/components/modal/Modal.js\";\nimport React from 'react';\nimport './Modal.css';\nimport { Timer } from 'react-compound-timer';\n\nconst Modal = props => {\n  let cancel = event => {\n    props.removeLastAddedArea();\n  };\n\n  let confirmSite = event => {\n    props.beginSiteTracker();\n    props.areasSubmitHandler();\n    props.close();\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-wrapper\",\n    style: {\n      transform: props.show ? 'translateY(0vh)' : 'translateY(-100vh)',\n      opacity: props.show ? '1' : '0'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Infusion Tracker\"), React.createElement(\"span\", {\n    className: \"close-modal-btn\",\n    onClick: cancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"\\xD7\")), React.createElement(\"div\", {\n    className: \"modal-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Time left for this infusion site:\", React.createElement(Timer, {\n    initialTime: 10000,\n    direction: \"backward\",\n    checkpoints: [{\n      time: 10000 - 10000,\n      callback: () => console.log('Checkpoint A')\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, () => React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Timer.Days, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), \" days\", React.createElement(Timer.Hours, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), \" hours\", React.createElement(Timer.Minutes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), \" minutes\", React.createElement(Timer.Seconds, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), \" seconds\", React.createElement(Timer.Milliseconds, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), \" milliseconds\")))), React.createElement(\"div\", {\n    className: \"modal-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn-cancel\",\n    onClick: cancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(\"button\", {\n    className: \"btn-continue\",\n    onClick: confirmSite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Confirm\"))));\n};\n\nexport default Modal;","map":{"version":3,"sources":["/Users/Danny/Documents/student-portal2/src/components/modal/Modal.js"],"names":["React","Timer","Modal","props","cancel","event","removeLastAddedArea","confirmSite","beginSiteTracker","areasSubmitHandler","close","transform","show","opacity","time","callback","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AAEA,SAASC,KAAT,QAAsB,sBAAtB;;AAIA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAEvB,MAAIC,MAAM,GAAIC,KAAD,IAAW;AACvBF,IAAAA,KAAK,CAACG,mBAAN;AACA,GAFD;;AAKE,MAAIC,WAAW,GAAIF,KAAD,IAAW;AACrBF,IAAAA,KAAK,CAACK,gBAAN;AACAL,IAAAA,KAAK,CAACM,kBAAN;AACAN,IAAAA,KAAK,CAACO,KAAN;AAEH,GALL;;AAQA,SAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,eAAf;AACI,IAAA,KAAK,EAAE;AACHC,MAAAA,SAAS,EAAER,KAAK,CAACS,IAAN,GAAa,iBAAb,GAAiC,oBADzC;AAEHC,MAAAA,OAAO,EAAEV,KAAK,CAACS,IAAN,GAAa,GAAb,GAAmB;AAFzB,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAkC,IAAA,OAAO,EAAER,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CALJ,EASI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAGI,oBAAC,KAAD;AACI,IAAA,WAAW,EAAE,KADjB;AAEI,IAAA,SAAS,EAAC,UAFd;AAGI,IAAA,WAAW,EAAE,CACT;AACIU,MAAAA,IAAI,EAAE,QAAQ,KADlB;AAEIC,MAAAA,QAAQ,EAAE,MAAMC,OAAO,CAACC,GAAR,CAAY,cAAZ;AAFpB,KADS,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWK,MACG,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,WAEI,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,YAGI,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,cAII,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,cAKI,oBAAC,KAAD,CAAO,YAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,kBAZR,CAHJ,CADJ,CATJ,EA2CI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAA+B,IAAA,OAAO,EAAEb,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAiC,IAAA,OAAO,EAAEG,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,CA3CJ,CADJ,CAFJ;AAsDH,CArED;;AAuEA,eAAeL,KAAf","sourcesContent":["import React from 'react';\nimport './Modal.css';\n\nimport { Timer } from 'react-compound-timer';\n\n\n\nconst Modal = (props) => {\n\n  let cancel = (event) => {\n   props.removeLastAddedArea()\n  }\n\n\n    let confirmSite = (event) => {\n            props.beginSiteTracker()\n            props.areasSubmitHandler()\n            props.close()\n\t\n        };\n        \n\n    return (\n        \n        <div>\n            <div className=\"modal-wrapper\"\n                style={{\n                    transform: props.show ? 'translateY(0vh)' : 'translateY(-100vh)',\n                    opacity: props.show ? '1' : '0'\n                }}>\n                <div className=\"modal-header\">\n                    <h3>Infusion Tracker</h3>\n                    <span className=\"close-modal-btn\" onClick={cancel}>Ã—</span>\n                </div>\n                <div className=\"modal-body\">\n                    <p>\n                        Time left for this infusion site:\n\n                        <Timer\n                            initialTime={10000}\n                            direction=\"backward\"\n                            checkpoints={[\n                                {\n                                    time: 10000 - 10000,\n                                    callback: () => console.log('Checkpoint A'),\n                                }\n\n                            ]}\n                        >\n                            {() => (\n                                <React.Fragment>\n                                    <Timer.Days /> days\n                                    <Timer.Hours /> hours\n                                    <Timer.Minutes /> minutes\n                                    <Timer.Seconds /> seconds\n                                    <Timer.Milliseconds /> milliseconds\n                                </React.Fragment>\n                            )}\n                        </Timer>\n\n                    </p>\n                </div>\n                {/* <div className=\"modal-body\">\n                    <p>\n                        {props.children}\n                        Do you want to confirm this as your current infusion site?\n                    </p>\n                </div> */}\n                <div className=\"modal-footer\">\n                    <button className=\"btn-cancel\" onClick={cancel}>Cancel</button>\n                    <button className=\"btn-continue\" onClick={confirmSite}>Confirm</button>\n                </div>\n            </div>\n        </div>\n    )\n    \n}\n\nexport default Modal;\n\n"]},"metadata":{},"sourceType":"module"}