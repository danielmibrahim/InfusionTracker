{"ast":null,"code":"import _defineProperty from \"/Users/Danny/Documents/student-portal2/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/Danny/Documents/student-portal2/src/components/body/Body.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport isEqual from \"react-fast-compare\";\nimport ImageMapper from 'react-image-mapper';\nimport MaleBody from '/Users/Danny/Documents/student-portal2/src/images/MaleBody.jpg';\n\nclass Body extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.enterArea = area => {\n      this.setState({\n        hoveredArea: area\n      });\n    };\n\n    this.leaveArea = area => {\n      this.setState({\n        hoveredArea: null,\n        msg: \"You leaved \".concat(area.shape, \" \").concat(area.name, \" at coords \").concat(JSON.stringify(area.coords), \" !\")\n      });\n    };\n  }\n\n  enterArea(area) {\n    this.setState({\n      hoveredArea: area\n    });\n  }\n\n  leaveArea(area) {\n    this.setState({\n      hoveredArea: null\n    });\n  }\n\n  getTipPosition(area) {\n    return {\n      top: \"\".concat(area.center[1], \"px\"),\n      left: \"\".concat(area.center[0], \"px\")\n    };\n  }\n\n  getInitialState() {\n    return {\n      hoveredArea: null,\n      msg: null,\n      moveMsg: null\n    };\n  }\n\n  load() {\n    this.setState({\n      msg: \"Interact with image !\"\n    });\n  }\n\n  clicked(area) {\n    this.setState({\n      msg: \"You clicked on \".concat(area.shape, \" at coords \").concat(JSON.stringify(area.coords), \" !\")\n    });\n  }\n\n  clickedOutside(evt) {\n    const coords = {\n      x: evt.nativeEvent.layerX,\n      y: evt.nativeEvent.layerY\n    };\n    this.setState({\n      msg: \"You clicked on the image at coords \".concat(JSON.stringify(coords), \" !\")\n    });\n  }\n\n  moveOnImage(evt) {\n    const coords = {\n      x: evt.nativeEvent.layerX,\n      y: evt.nativeEvent.layerY\n    };\n    this.setState({\n      moveMsg: \"You moved on the image at coords \".concat(JSON.stringify(coords), \" !\")\n    });\n  }\n\n  moveOnArea(area, evt) {\n    const coords = {\n      x: evt.nativeEvent.layerX,\n      y: evt.nativeEvent.layerY\n    };\n    this.setState({\n      moveMsg: \"You moved on \".concat(area.shape, \" \").concat(area.name, \" at coords \").concat(JSON.stringify(coords), \" !\")\n    });\n  }\n\n  getTipPosition(area) {\n    return {\n      top: \"\".concat(area.center[1], \"px\"),\n      left: \"\".concat(area.center[0], \"px\")\n    };\n  }\n\n  render() {\n    let MAP = {\n      name: \"my-map\",\n      areas: [{\n        name: \"1\",\n        shape: \"poly\",\n        coords: [25, 33, 27, 300, 128, 240, 128, 94],\n        preFillColor: \"green\",\n        fillColor: \"blue\"\n      }, {\n        name: \"2\",\n        shape: \"poly\",\n        coords: [219, 118, 220, 210, 283, 210, 284, 119],\n        preFillColor: \"pink\"\n      }, {\n        name: \"3\",\n        shape: \"poly\",\n        coords: [381, 241, 383, 94, 462, 53, 457, 282],\n        fillColor: \"yellow\"\n      }, {\n        name: \"4\",\n        shape: \"poly\",\n        coords: [245, 285, 290, 285, 274, 239, 249, 238],\n        preFillColor: \"red\"\n      }, {\n        name: \"5\",\n        shape: \"circle\",\n        coords: [170, 100, 25]\n      }]\n    };\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(ImageMapper, {\n      src: MaleBody,\n      map: MAP,\n      width: 500,\n      onLoad: () => this.load(),\n      onClick: area => this.clicked(area),\n      onMouseEnter: area => this.enterArea(area),\n      onMouseLeave: area => this.leaveArea(area),\n      onMouseMove: (area, _, evt) => this.moveOnArea(area, evt),\n      onImageClick: evt => this.clickedOutside(evt),\n      onImageMouseMove: evt => this.moveOnImage(evt),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), this.state.hoveredArea && React.createElement(\"span\", {\n      className: \"tooltip\",\n      style: _objectSpread({}, this.getTipPosition(this.state.hoveredArea)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.state.hoveredArea && this.state.hoveredArea.name));\n  }\n\n}\n\nexport default Body; // {/* ImageMapper.defaultProps = {\n// \tactive: true,\n// \tfillColor: \"rgba(255, 255, 255, 0.5)\",\n// \tlineWidth: 1,\n// \tmap: {\n// \t\tareas: [],\n// \t\tname: \"image-map-\" + Math.random()\n// \t},\n// \tstrokeColor: \"rgba(0, 0, 0, 0.5)\"\n// };\n// ImageMapper.propTypes = {\n// \tactive: PropTypes.bool,\n// \tfillColor: PropTypes.string,\n// \theight: PropTypes.number,\n// \timgWidth: PropTypes.number,\n// \tlineWidth: PropTypes.number,\n// \tsrc: PropTypes.string.isRequired,\n// \tstrokeColor: PropTypes.string,\n// \twidth: PropTypes.number,\n// \tonClick: PropTypes.func,\n// \tonMouseMove: PropTypes.func,\n// \tonImageClick: PropTypes.func,\n// \tonImageMouseMove: PropTypes.func,\n// \tonLoad: PropTypes.func,\n// \tonMouseEnter: PropTypes.func,\n// \tonMouseLeave: PropTypes.func,\n// \tmap: PropTypes.shape({\n// \t\tareas: PropTypes.arrayOf(\n// \t\t\tPropTypes.shape({\n// \t\t\t\tarea: PropTypes.shape({\n// \t\t\t\t\tcoords: PropTypes.arrayOf(PropTypes.number),\n// \t\t\t\t\thref: PropTypes.string,\n// \t\t\t\t\tshape: PropTypes.string,\n// \t\t\t\t\tpreFillColor: PropTypes.string,\n// \t\t\t\t\tfillColor: PropTypes.string\n// \t\t\t\t})\n// \t\t\t})\n// \t\t),\n// \t\tname: PropTypes.string\n// \t})\n// }; */}","map":{"version":3,"sources":["/Users/Danny/Documents/student-portal2/src/components/body/Body.js"],"names":["React","Component","PropTypes","isEqual","ImageMapper","MaleBody","Body","enterArea","area","setState","hoveredArea","leaveArea","msg","shape","name","JSON","stringify","coords","getTipPosition","top","center","left","getInitialState","moveMsg","load","clicked","clickedOutside","evt","x","nativeEvent","layerX","y","layerY","moveOnImage","moveOnArea","render","MAP","areas","preFillColor","fillColor","_","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport isEqual from \"react-fast-compare\";\nimport  ImageMapper from 'react-image-mapper';\nimport  MaleBody  from '/Users/Danny/Documents/student-portal2/src/images/MaleBody.jpg';\n\n\nclass Body extends Component {\n   \n    enterArea(area) {\n        this.setState({ hoveredArea: area });\n    }\n    \n    leaveArea(area) {\n        this.setState({ hoveredArea: null });\n    }\n    \n    getTipPosition(area) {\n        return { top: `${area.center[1]}px`, left: `${area.center[0]}px` };\n    }\n    getInitialState() {\n\t\treturn { hoveredArea: null, msg: null, moveMsg: null };\n\t}\n\tload() {\n\t\tthis.setState({ msg: \"Interact with image !\" });\n\t}\n\tclicked(area) {\n\t\tthis.setState({\n\t\t\tmsg: `You clicked on ${area.shape} at coords ${JSON.stringify(\n\t\t\t\tarea.coords\n\t\t\t)} !`\n\t\t});\n\t}\n\tclickedOutside(evt) {\n\t\tconst coords = { x: evt.nativeEvent.layerX, y: evt.nativeEvent.layerY };\n\t\tthis.setState({\n\t\t\tmsg: `You clicked on the image at coords ${JSON.stringify(coords)} !`\n\t\t});\n\t}\n\tmoveOnImage(evt) {\n\t\tconst coords = { x: evt.nativeEvent.layerX, y: evt.nativeEvent.layerY };\n\t\tthis.setState({\n\t\t\tmoveMsg: `You moved on the image at coords ${JSON.stringify(coords)} !`\n\t\t});\n\t}\n\tenterArea = (area) => {\n\t\tthis.setState({ hoveredArea: area });\n\t}\n\tleaveArea = (area) =>{\n\t\tthis.setState({\n\t\t\thoveredArea: null,\n\t\t\tmsg: `You leaved ${area.shape} ${area.name} at coords ${JSON.stringify(\n\t\t\t\tarea.coords\n\t\t\t)} !`\n\t\t});\n\t}\n\tmoveOnArea(area, evt) {\n\t\tconst coords = { x: evt.nativeEvent.layerX, y: evt.nativeEvent.layerY };\n\t\tthis.setState({\n\t\t\tmoveMsg: `You moved on ${area.shape} ${\n\t\t\t\tarea.name\n\t\t\t} at coords ${JSON.stringify(coords)} !`\n\t\t});\n\t}\n\n\tgetTipPosition(area) {\n\t\treturn { top: `${area.center[1]}px`, left: `${area.center[0]}px` };\n\t}\n    render() {\n       let  MAP ={\n            name: \"my-map\",\n            areas: [\n              { name: \"1\", shape: \"poly\", coords: [25,33,27,300,128,240,128,94], preFillColor: \"green\", fillColor: \"blue\"  },\n              { name: \"2\", shape: \"poly\", coords: [219,118,220,210,283,210,284,119], preFillColor: \"pink\"  },\n              { name: \"3\", shape: \"poly\", coords: [381,241,383,94,462,53,457,282], fillColor: \"yellow\"  },\n              { name: \"4\", shape: \"poly\", coords: [245,285,290,285,274,239,249,238], preFillColor: \"red\"  },\n              { name: \"5\", shape: \"circle\", coords: [170, 100, 25 ] },\n            ]\n          }\n        return (\n            <div className=\"container\">\n    <ImageMapper src={MaleBody} map={MAP} width={500}\n    \tonLoad={() => this.load()}\n    \tonClick={area => this.clicked(area)}\n    \tonMouseEnter={area => this.enterArea(area)}\n    \tonMouseLeave={area => this.leaveArea(area)}\n    \tonMouseMove={(area, _, evt) => this.moveOnArea(area, evt)}\n    \tonImageClick={evt => this.clickedOutside(evt)}\n    \tonImageMouseMove={evt => this.moveOnImage(evt)}\n    />\n    {\n    \tthis.state.hoveredArea &&\n    \t<span className=\"tooltip\"\n    \t    style={{ ...this.getTipPosition(this.state.hoveredArea)}}>\n    \t\t{ this.state.hoveredArea && this.state.hoveredArea.name}\n    \t</span>\n    }\n</div>\n\n               \n        );\n    }\n}\nexport default Body;\n// {/* ImageMapper.defaultProps = {\n// \tactive: true,\n// \tfillColor: \"rgba(255, 255, 255, 0.5)\",\n// \tlineWidth: 1,\n// \tmap: {\n// \t\tareas: [],\n// \t\tname: \"image-map-\" + Math.random()\n// \t},\n// \tstrokeColor: \"rgba(0, 0, 0, 0.5)\"\n// };\n\n// ImageMapper.propTypes = {\n// \tactive: PropTypes.bool,\n// \tfillColor: PropTypes.string,\n// \theight: PropTypes.number,\n// \timgWidth: PropTypes.number,\n// \tlineWidth: PropTypes.number,\n// \tsrc: PropTypes.string.isRequired,\n// \tstrokeColor: PropTypes.string,\n// \twidth: PropTypes.number,\n\n// \tonClick: PropTypes.func,\n// \tonMouseMove: PropTypes.func,\n// \tonImageClick: PropTypes.func,\n// \tonImageMouseMove: PropTypes.func,\n// \tonLoad: PropTypes.func,\n// \tonMouseEnter: PropTypes.func,\n// \tonMouseLeave: PropTypes.func,\n\n// \tmap: PropTypes.shape({\n// \t\tareas: PropTypes.arrayOf(\n// \t\t\tPropTypes.shape({\n// \t\t\t\tarea: PropTypes.shape({\n// \t\t\t\t\tcoords: PropTypes.arrayOf(PropTypes.number),\n// \t\t\t\t\thref: PropTypes.string,\n// \t\t\t\t\tshape: PropTypes.string,\n// \t\t\t\t\tpreFillColor: PropTypes.string,\n// \t\t\t\t\tfillColor: PropTypes.string\n// \t\t\t\t})\n// \t\t\t})\n// \t\t),\n// \t\tname: PropTypes.string\n// \t})\n// }; */}\n\n\n"]},"metadata":{},"sourceType":"module"}