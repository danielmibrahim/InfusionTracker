{"ast":null,"code":"var _jsxFileName = \"/Users/Danny/Documents/Capstone/student-portal2/src/components/modal/Modal.js\";\nimport React from 'react';\nimport './Modal.css';\n\nconst Modal = props => {\n  let cancel = event => {\n    props.removeLastAddedArea();\n  };\n\n  let confirmSite = event => {\n    props.beginSiteTracker();\n    props.areasSubmitHandler();\n    props.close();\n  };\n\n  let timerMessage = React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-wrapper\",\n    style: {\n      transform: props.show ? 'translateY(0vh)' : 'translateY(-100vh)',\n      opacity: props.show ? '1' : '0'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Infusion Tracker\"), React.createElement(\"span\", {\n    className: \"close-modal-btn\",\n    onClick: cancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"\\xD7\")), React.createElement(\"div\", {\n    className: \"modal-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"This site expires on:\"), expireDate.getMonth(), \"/\", expireDate.getDate() + 3), React.createElement(\"div\", {\n    className: \"modal-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })));\n\n  if (props.selectedArea.savedArea = true) {\n    timerMessage = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-wrapper\",\n      style: {\n        transform: props.show ? 'translateY(0vh)' : 'translateY(-100vh)',\n        opacity: props.show ? '1' : '0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Infusion Tracker\"), React.createElement(\"span\", {\n      className: \"close-modal-btn\",\n      onClick: cancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"\\xD7\")), React.createElement(\"div\", {\n      className: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"This site expires on:\"), expireDate.getMonth(), \"/\", expireDate.getDate() + 3), React.createElement(\"div\", {\n      className: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })));\n  }\n\n  console.log(\"Timer props -> \", props.selectedArea.date);\n  let initialDate = new Date(props.selectedArea.date);\n  let expireDate = new Date(initialDate);\n  console.log(\"expire date ::> \", expireDate);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-wrapper\",\n    style: {\n      transform: props.show ? 'translateY(0vh)' : 'translateY(-100vh)',\n      opacity: props.show ? '1' : '0'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Infusion Tracker\"), React.createElement(\"span\", {\n    className: \"close-modal-btn\",\n    onClick: cancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"\\xD7\")), React.createElement(\"div\", {\n    className: \"modal-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, props.children, \"Do you want to confirm this as your current infusion site?\")), React.createElement(\"div\", {\n    className: \"modal-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn-cancel\",\n    onClick: cancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(\"button\", {\n    className: \"btn-continue\",\n    onClick: confirmSite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Confirm\"))));\n};\n\nexport default Modal;","map":{"version":3,"sources":["/Users/Danny/Documents/Capstone/student-portal2/src/components/modal/Modal.js"],"names":["React","Modal","props","cancel","event","removeLastAddedArea","confirmSite","beginSiteTracker","areasSubmitHandler","close","timerMessage","transform","show","opacity","expireDate","getMonth","getDate","selectedArea","savedArea","console","log","date","initialDate","Date","children"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Modal.css';\n\nconst Modal = (props) => {\n\n    let cancel = (event) => {\n        props.removeLastAddedArea()\n    }\n\n\n    let confirmSite = (event) => {\n        props.beginSiteTracker()\n        props.areasSubmitHandler()\n        props.close()\n\n    };\n\n    let timerMessage = (\n        <div>\n            <div className=\"modal-wrapper\"\n                style={{\n                    transform: props.show ? 'translateY(0vh)' : 'translateY(-100vh)',\n                    opacity: props.show ? '1' : '0'\n                }}>\n                <div className=\"modal-header\">\n                    <h3>Infusion Tracker</h3>\n                    <span className=\"close-modal-btn\" onClick={cancel}>Ã—</span>\n                </div>\n\n                 <div className=\"modal-body\">\n                    <p>This site expires on:</p>\n                {expireDate.getMonth()}/{expireDate.getDate()+3} \n                   \n                   \n                 </div> \n                <div className=\"modal-body\">     \n                 </div>\n                 </div>\n             </div>\n\n    ) \n    if (props.selectedArea.savedArea=true){\n        timerMessage=(\n            <div>\n            <div className=\"modal-wrapper\"\n                style={{\n                    transform: props.show ? 'translateY(0vh)' : 'translateY(-100vh)',\n                    opacity: props.show ? '1' : '0'\n                }}>\n                <div className=\"modal-header\">\n                    <h3>Infusion Tracker</h3>\n                    <span className=\"close-modal-btn\" onClick={cancel}>Ã—</span>\n                </div>\n\n                 <div className=\"modal-body\">\n                    <p>This site expires on:</p>\n                {expireDate.getMonth()}/{expireDate.getDate()+3} \n                   \n                   \n                 </div> \n                <div className=\"modal-body\">     \n                 </div>\n                 </div>\n             </div>\n\n        )\n    }\n\n    console.log(\"Timer props -> \", props.selectedArea.date)\n    let initialDate  = new Date(props.selectedArea.date)\n    let expireDate = new Date(initialDate)\n    console.log(\"expire date ::> \", expireDate)\n   \n  \n\n    return (\n        <div>\n            <div className=\"modal-wrapper\"\n                style={{\n                    transform: props.show ? 'translateY(0vh)' : 'translateY(-100vh)',\n                    opacity: props.show ? '1' : '0'\n                }}>\n                <div className=\"modal-header\">\n                    <h3>Infusion Tracker</h3>\n                    <span className=\"close-modal-btn\" onClick={cancel}>Ã—</span>\n                </div>\n\n                {/* <div className=\"modal-body\">\n                    <p>This site expires on:</p>\n                {expireDate.getMonth()}/{expireDate.getDate()+3} \n                   \n                    {   props.selectedArea && props.selectedArea.saveArea? (\n                                \"timer\" \n                            )\n                        :  \"\"\n                    }\n                 </div> */}\n                <div className=\"modal-body\">\n                    <p>\n                        {props.children}\n                        Do you want to confirm this as your current infusion site?\n                    </p>\n                </div>\n                <div className=\"modal-footer\">\n                    <button className=\"btn-cancel\" onClick={cancel}>Cancel</button>\n                    <button className=\"btn-continue\" onClick={confirmSite}>Confirm</button>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Modal;\n\n"]},"metadata":{},"sourceType":"module"}