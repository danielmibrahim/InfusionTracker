{"ast":null,"code":"var _jsxFileName = \"/Users/Danny/Documents/Capstone/student-portal2/src/components/modal/Modal.js\";\nimport React, { Component } from 'react';\nimport countdown from 'countdown';\nimport './Modal.css';\n\nclass Modal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      timer: \"\"\n    };\n\n    this.handleChangeColor = newColor => {\n      this.props.selectedArea.fillColor({\n        fillColor: newColor\n      });\n    };\n\n    this.cancel = event => {\n      this.props.removeLastAddedArea();\n      window.location.reload(false);\n    };\n\n    this.confirmSite = event => {\n      this.props.beginSiteTracker();\n      this.props.areasSubmitHandler();\n      this.props.close();\n      window.location.reload(false);\n    };\n  }\n\n  componentDidMount() {\n    let initialDate = new Date(this.props.selectedArea.date);\n    let expireDate = new Date(initialDate);\n    expireDate.setDate(initialDate.getDate() + 3);\n    this.setState({\n      timer: countdown(new Date(), expireDate, countdown.DAYS | countdown.HOURS | countdown.MINUTES | countdown.SECONDS).toString()\n    });\n    setInterval(() => this.setState({\n      timer: countdown(new Date(), expireDate, countdown.DAYS | countdown.HOURS | countdown.MINUTES | countdown.SECONDS).toString()\n    }), 1000);\n  }\n\n  componentDidMount(event) {\n    event.preventDefault();\n    this.timer = setTimeout(() => this.handleChangeColor(\"red\"), 1000 * 3 // in milliseconds, 3s for fast show\n    );\n  }\n\n  render() {\n    let modalMessage = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    });\n\n    if (this.props.selectedArea.savedArea == true) {\n      modalMessage = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-wrapper\",\n        style: {\n          transform: this.props.show ? 'translateY(0vh)' : 'translateY(-100vh)',\n          opacity: this.props.show ? '1' : '0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Infusion Tracker\"), React.createElement(\"span\", {\n        className: \"close-modal-btn\",\n        onClick: this.props.close,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"\\xD7\")), React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"This site will expire in:\"), this.state.timer), React.createElement(\"div\", {\n        className: \"modal-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn-cancel\",\n        onClick: this.props.close,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Close\"))));\n    } else {\n      modalMessage = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-wrapper\",\n        style: {\n          transform: this.props.show ? 'translateY(0vh)' : 'translateY(-100vh)',\n          opacity: this.props.show ? '1' : '0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Infusion Tracker\"), React.createElement(\"span\", {\n        className: \"close-modal-btn\",\n        onClick: this.cancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"\\xD7\")), React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Do you want to confirm this as your current site?\")), React.createElement(\"div\", {\n        className: \"modal-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn-cancel\",\n        onClick: this.cancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(\"button\", {\n        className: \"btn-continue\",\n        onClick: this.confirmSite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Confirm\"))));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, modalMessage);\n  }\n\n}\n\nexport default Modal;","map":{"version":3,"sources":["/Users/Danny/Documents/Capstone/student-portal2/src/components/modal/Modal.js"],"names":["React","Component","countdown","Modal","state","timer","handleChangeColor","newColor","props","selectedArea","fillColor","cancel","event","removeLastAddedArea","window","location","reload","confirmSite","beginSiteTracker","areasSubmitHandler","close","componentDidMount","initialDate","Date","date","expireDate","setDate","getDate","setState","DAYS","HOURS","MINUTES","SECONDS","toString","setInterval","preventDefault","setTimeout","render","modalMessage","savedArea","transform","show","opacity"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport countdown from 'countdown'\nimport './Modal.css';\n\n\nclass Modal extends Component {\n\n    state = {\n        timer: \"\"\n    }\n\n    componentDidMount(){\n        let initialDate  = new Date(this.props.selectedArea.date)\n        let expireDate = new Date(initialDate)\n        expireDate.setDate(initialDate.getDate()+3);\n        this.setState({timer: countdown(new Date(), expireDate,countdown.DAYS| countdown.HOURS|countdown.MINUTES|countdown.SECONDS).toString()})\n\n        setInterval(\n            () => this.setState({timer: countdown(new Date(), expireDate, countdown.DAYS|countdown.HOURS|countdown.MINUTES|countdown.SECONDS).toString()}),\n            1000\n        )\n    }\n  \n\n    handleChangeColor = (newColor) => {\n        this.props.selectedArea.fillColor({\n          fillColor: newColor\n        })\n      }\n\n      componentDidMount(event) {\n        event.preventDefault();\n        this.timer = setTimeout(\n          () => this.handleChangeColor(\"red\"),\n          1000*3 // in milliseconds, 3s for fast show\n        )\n      }\n\n    cancel = (event) => {\n        this.props.removeLastAddedArea()\n        window.location.reload(false)\n    }\n\n    \n\n    confirmSite = (event) => {\n        this.props.beginSiteTracker()\n        this.props.areasSubmitHandler()\n        this.props.close()\n        window.location.reload(false)\n    };\n    \n    render(){\n        \n        let modalMessage = (\n            <div></div>\n\n        )\n        \n        if (this.props.selectedArea.savedArea == true){\n            modalMessage=(\n                <div>\n                <div className=\"modal-wrapper\"\n                    style={{\n                        transform: this.props.show ? 'translateY(0vh)' : 'translateY(-100vh)',\n                        opacity: this.props.show ? '1' : '0'\n                    }}>\n                    <div className=\"modal-header\">\n                        <h3>Infusion Tracker</h3>\n                        <span className=\"close-modal-btn\" onClick={this.props.close}>×</span>\n                    </div>\n\n                    <div className=\"modal-body\">\n                        <p>This site will expire in:</p>\n                    {   \n                        this.state.timer\n                    }\n                    \n                    \n                    </div> \n                    <div className=\"modal-footer\">\n                    <button className=\"btn-cancel\" onClick={this.props.close}>Close</button>\n                    </div>\n                    </div>\n                </div>\n\n            )\n            \n        }\n        else {\n            modalMessage =( \n                <div>\n                <div className=\"modal-wrapper\"\n                    style={{\n                        transform: this.props.show ? 'translateY(0vh)' : 'translateY(-100vh)',\n                        opacity: this.props.show ? '1' : '0'\n                    }}>\n                    <div className=\"modal-header\">\n                        <h3>Infusion Tracker</h3>\n                        <span className=\"close-modal-btn\" onClick={this.cancel}>×</span>\n                    </div>\n\n                    <div className=\"modal-body\">\n                        <p>Do you want to confirm this as your current site?</p>\n                    </div> \n                    <div className=\"modal-footer\">\n                    <button className=\"btn-cancel\" onClick={this.cancel}>Cancel</button>\n                        <button className=\"btn-continue\" onClick={this.confirmSite}>Confirm</button>\n                    </div>\n                    </div>\n                </div>\n                       \n                   \n            )\n        }\n\n\n        return (\n            <div>\n            \n                    {modalMessage}\n                \n                    \n                </div>\n            \n        );\n    }\n\n}\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}