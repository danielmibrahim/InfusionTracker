{"ast":null,"code":"var _jsxFileName = \"/Users/Danny/Documents/Capstone/student-portal2/src/components/modal/Modal.js\";\nimport React from 'react';\nimport './Modal.css';\nimport Timer from 'react-compound-timer';\n\nconst Modal = props => {\n  let cancel = event => {\n    props.removeLastAddedArea();\n  };\n\n  let confirmSite = event => {\n    props.beginSiteTracker();\n    props.areasSubmitHandler();\n    props.close();\n  };\n\n  console.log(\"Timer props -> \", props.selectedArea.date);\n  let expireDate = new Date(props.selectedArea.date);\n  expireDate.getMilliseconds(expireDate.getMilliseconds() + 259200000);\n  console.log(\"expire date ::> \", expireDate);\n  let initialTime = props.selectedArea.date;\n  initialTime.getMilliseconds(initialTime.getMilliseconds());\n  console.log(\"Time is ::> \", initialTime);\n  let timer = React.createElement(Timer, {\n    initialTime: initialTime,\n    direction: \"backward\",\n    checkpoints: [{\n      time: initialTime - expireDate,\n      callback: () => console.log('Checkpoint A')\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, () => React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Timer.Days, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), \" days\", React.createElement(Timer.Hours, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), \" hours\", React.createElement(Timer.Minutes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), \" minutes\", React.createElement(Timer.Seconds, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), \" seconds\"));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-wrapper\",\n    style: {\n      transform: props.show ? 'translateY(0vh)' : 'translateY(-100vh)',\n      opacity: props.show ? '1' : '0'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Infusion Tracker\"), React.createElement(\"span\", {\n    className: \"close-modal-btn\",\n    onClick: cancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"\\xD7\")), React.createElement(\"div\", {\n    className: \"modal-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Time left for this infusion site:\"), timer), React.createElement(\"div\", {\n    className: \"modal-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, props.children, \"Do you want to confirm this as your current infusion site?\")), React.createElement(\"div\", {\n    className: \"modal-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn-cancel\",\n    onClick: cancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(\"button\", {\n    className: \"btn-continue\",\n    onClick: confirmSite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Confirm\"))));\n};\n\nexport default Modal;","map":{"version":3,"sources":["/Users/Danny/Documents/Capstone/student-portal2/src/components/modal/Modal.js"],"names":["React","Timer","Modal","props","cancel","event","removeLastAddedArea","confirmSite","beginSiteTracker","areasSubmitHandler","close","console","log","selectedArea","date","expireDate","Date","getMilliseconds","initialTime","timer","time","callback","transform","show","opacity","children"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Modal.css';\n\nimport Timer  from 'react-compound-timer';\n\n\n\nconst Modal = (props) => {\n\n    let cancel = (event) => {\n        props.removeLastAddedArea()\n    }\n\n\n    let confirmSite = (event) => {\n        props.beginSiteTracker()\n        props.areasSubmitHandler()\n        props.close()\n\n    };\n\n    console.log(\"Timer props -> \", props.selectedArea.date)\n    let expireDate  = new Date(props.selectedArea.date)\n    expireDate.getMilliseconds(expireDate.getMilliseconds()+259200000)\n    console.log(\"expire date ::> \", expireDate)\n    let initialTime = props.selectedArea.date\n    initialTime.getMilliseconds(initialTime.getMilliseconds());\n\n    console.log(\"Time is ::> \", initialTime)\n    let timer = (\n        <Timer\n            initialTime={initialTime}\n            direction=\"backward\"\n            checkpoints={[\n                {\n                    time:  initialTime - expireDate,\n                    callback: () => console.log('Checkpoint A')\n                }\n\n            ]}\n        >\n            {() => (\n                <React.Fragment>\n                    <Timer.Days /> days\n                    <Timer.Hours /> hours\n                    <Timer.Minutes /> minutes\n                    <Timer.Seconds /> seconds\n                </React.Fragment>\n            )}\n        </Timer>\n    )\n\n    return (\n        <div>\n            <div className=\"modal-wrapper\"\n                style={{\n                    transform: props.show ? 'translateY(0vh)' : 'translateY(-100vh)',\n                    opacity: props.show ? '1' : '0'\n                }}>\n                <div className=\"modal-header\">\n                    <h3>Infusion Tracker</h3>\n                    <span className=\"close-modal-btn\" onClick={cancel}>Ã—</span>\n                </div>\n                <div className=\"modal-body\">\n                    <p>Time left for this infusion site:</p>\n                        {timer}\n                    {/* {   props.selectedArea && props.selectedArea.saveArea? (\n                                timer \n                            )\n                        :  \"\"\n                    } */}\n                </div>\n                <div className=\"modal-body\">\n                    <p>\n                        {props.children}\n                        Do you want to confirm this as your current infusion site?\n                    </p>\n                </div>\n                <div className=\"modal-footer\">\n                    <button className=\"btn-cancel\" onClick={cancel}>Cancel</button>\n                    <button className=\"btn-continue\" onClick={confirmSite}>Confirm</button>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Modal;\n\n"]},"metadata":{},"sourceType":"module"}