{"ast":null,"code":"import _defineProperty from \"/Users/Danny/Documents/student-portal2/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/Danny/Documents/student-portal2/src/components/body/Body.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport isEqual from \"react-fast-compare\";\nimport { ImageMapper, MAP } from 'react-image-mapper';\nimport MaleBody from '/Users/Danny/Documents/student-portal2/src/images/MaleBody.jpg';\nexport default class Body extends Component {\n  // getInitialState() {\n  // \treturn { hoveredArea: null, msg: null, moveMsg: null };\n  // }\n  load() {\n    this.setState({\n      msg: \"Interact with image !\"\n    });\n  }\n\n  clicked(area) {\n    this.setState({\n      msg: \"You clicked on \".concat(area.shape, \" at coords \").concat(JSON.stringify(area.coords), \" !\")\n    });\n  }\n\n  clickedOutside(evt) {\n    const coords = {\n      x: evt.nativeEvent.layerX,\n      y: evt.nativeEvent.layerY\n    };\n    this.setState({\n      msg: \"You clicked on the image at coords \".concat(JSON.stringify(coords), \" !\")\n    });\n  }\n\n  moveOnImage(evt) {\n    const coords = {\n      x: evt.nativeEvent.layerX,\n      y: evt.nativeEvent.layerY\n    };\n    this.setState({\n      moveMsg: \"You moved on the image at coords \".concat(JSON.stringify(coords), \" !\")\n    });\n  }\n\n  enterArea(area) {\n    this.setState({\n      hoveredArea: area\n    });\n  }\n\n  leaveArea(area) {\n    this.setState({\n      hoveredArea: null,\n      msg: \"You leaved \".concat(area.shape, \" \").concat(area.name, \" at coords \").concat(JSON.stringify(area.coords), \" !\")\n    });\n  }\n\n  moveOnArea(area, evt) {\n    const coords = {\n      x: evt.nativeEvent.layerX,\n      y: evt.nativeEvent.layerY\n    };\n    this.setState({\n      moveMsg: \"You moved on \".concat(area.shape, \" \").concat(area.name, \" at coords \").concat(JSON.stringify(coords), \" !\")\n    });\n  }\n\n  getTipPosition(area) {\n    return {\n      top: \"\".concat(area.center[1], \"px\"),\n      left: \"\".concat(area.center[0], \"px\")\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"presenter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        position: \"relative\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(ImageMapper, {\n      src: URL,\n      map: MAP,\n      width: 500,\n      onLoad: () => this.load(),\n      onClick: area => this.clicked(area),\n      onMouseEnter: area => this.enterArea(area),\n      onMouseLeave: area => this.leaveArea(area),\n      onMouseMove: (area, _, evt) => this.moveOnArea(area, evt),\n      onImageClick: evt => this.clickedOutside(evt),\n      onImageMouseMove: evt => this.moveOnImage(evt),\n      lineWidth: 4,\n      strokeColor: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), this.state.hoveredArea && React.createElement(\"span\", {\n      className: \"tooltip\",\n      style: _objectSpread({}, this.getTipPosition(this.state.hoveredArea)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.hoveredArea && this.state.hoveredArea.name)), React.createElement(\"pre\", {\n      className: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.state.msg ? this.state.msg : null), React.createElement(\"pre\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.state.moveMsg ? this.state.moveMsg : null)), React.createElement(\"div\", {\n      className: \"source\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Example with custom tooltips :\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"(message logic is not present, to keep it clear)\"), React.createElement(\"pre\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, '<div className=\"container\">\\n' + \"    <ImageMapper src={URL} map={MAP} width={500}\\n\" + \"    \tonLoad={() => this.load()}\\n\" + \"    \tonClick={area => this.clicked(area)}\\n\" + \"    \tonMouseEnter={area => this.enterArea(area)}\\n\" + \"    \tonMouseLeave={area => this.leaveArea(area)}\\n\" + \"    \tonMouseMove={(area, _, evt) => this.moveOnArea(area, evt)}\\n\" + \"    \tonImageClick={evt => this.clickedOutside(evt)}\\n\" + \"    \tonImageMouseMove={evt => this.moveOnImage(evt)}\\n\" + \"\t\tlineWidth={4}\\n\" + \"\t\tstrokeColor={\\\"white\\\"}\\n\" + \"    />\\n\" + \"    {\\n\" + \"    \tthis.state.hoveredArea &&\\n\" + '    \t<span className=\"tooltip\"\\n' + \"    \t    style={{ ...this.getTipPosition(this.state.hoveredArea)}}>\\n\" + \"    \t\t{ this.state.hoveredArea && this.state.hoveredArea.name}\\n\" + \"    \t</span>\\n\" + \"    }\\n\" + \"</div>\\n\")), React.createElement(\"pre\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"code\", {\n      className: \"json\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, 'URL = \"https://c1.staticflickr.com/5/4052/4503898393_303cfbc9fd_b.jpg\"\\n' + \"MAP = {\\n\" + '  name: \"my-map\",\\n' + \"  areas: [\\n\" + '    { name: \"1\", shape: \"poly\", coords: [25,33,27,300,128,240,128,94], preFillColor: \"green\", fillColor: \"#0000ff\", },\\n' + '    { name: \"2\", shape: \"poly\", coords: [219,118,220,210,283,210,284,119], preFillColor: \"pink\", lineWidth: 10, strokeColor: \"#0000ff\" },\\n' + '    { name: \"3\", shape: \"poly\", coords: [381,241,383,94,462,53,457,282], preFillColor: \"yellow\", /*this is mandatory for stroke color to work*/ lineWidth: 10, strokeColor: \"#6afd09\" },\\n' + '    { name: \"4\", shape: \"poly\", coords: [245,285,290,285,274,239,249,238], preFillColor: \"red\"  },\\n' + '    { name: \"5\", shape: \"circle\", coords: [170, 100, 25 ], preFillColor: \"rgb(255,255,255,0.3)\", lineWidth: 2 },\\n' + '    { name: \"6\", shape: \"rect\", coords: [270, 100, 200, 50], lineWidth: 2, preFillColor: \"rgba(255, 255, 255, 0.3)\", strokeColor: \"#6afd09\" }\\n' + \"  ]\\n}\")), \"Handler details : \\xA0\", React.createElement(\"span\", {\n      onClick: () => this.setState({\n        codeDetails: !this.state.codeDetails\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, this.state.codeDetails ? \"[-]\" : \"[+]\"), React.createElement(\"pre\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"code\", {\n      className: \"js\",\n      style: {\n        display: this.state.codeDetails ? \"block\" : \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"enterArea(area) {\\n\" + \"    this.setState({ hoveredArea: area });\\n\" + \"}\\n\\n\" + \"leaveArea(area) {\\n\" + \"    this.setState({ hoveredArea: null });\\n\" + \"}\\n\\n\" + \"getTipPosition(area) {\\n\" + \"    return { top: `${area.center[1]}px`, left: `${area.center[0]}px` };\\n\" + \"}\\n\\n\")), \"Styling details : \\xA0\", React.createElement(\"span\", {\n      onClick: () => this.setState({\n        stylindDetails: !this.state.stylindDetails\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, this.state.stylindDetails ? \"[-]\" : \"[+]\"), React.createElement(\"pre\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"code\", {\n      className: \"css\",\n      style: {\n        display: this.state.stylindDetails ? \"block\" : \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \".container {\\n\" + \"    position: relative;\\n\" + \"}\\n\\n\" + \".tooltip {\\n\" + \"    position: absolute;\\n\" + \"    color: #fff;\\n\" + \"    padding: 10px;\\n\" + \"    background: rgba(0,0,0,0.8);\\n\" + \"    transform: translate3d(-50%, -50%, 0);\\n\" + \"    border-radius: 5px;\\n\" + \"    pointer-events: none;\\n\" + \"    z-index: 1000;\\n\" + \"}\\n\"))));\n  }\n\n}\n{\n  /* ImageMapper.defaultProps = {\n  active: true,\n  fillColor: \"rgba(255, 255, 255, 0.5)\",\n  lineWidth: 1,\n  map: {\n  \tareas: [],\n  \tname: \"image-map-\" + Math.random()\n  },\n  strokeColor: \"rgba(0, 0, 0, 0.5)\"\n  };\n  ImageMapper.propTypes = {\n  active: PropTypes.bool,\n  fillColor: PropTypes.string,\n  height: PropTypes.number,\n  imgWidth: PropTypes.number,\n  lineWidth: PropTypes.number,\n  src: PropTypes.string.isRequired,\n  strokeColor: PropTypes.string,\n  width: PropTypes.number,\n  \tonClick: PropTypes.func,\n  onMouseMove: PropTypes.func,\n  onImageClick: PropTypes.func,\n  onImageMouseMove: PropTypes.func,\n  onLoad: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  \tmap: PropTypes.shape({\n  \tareas: PropTypes.arrayOf(\n  \t\tPropTypes.shape({\n  \t\t\tarea: PropTypes.shape({\n  \t\t\t\tcoords: PropTypes.arrayOf(PropTypes.number),\n  \t\t\t\thref: PropTypes.string,\n  \t\t\t\tshape: PropTypes.string,\n  \t\t\t\tpreFillColor: PropTypes.string,\n  \t\t\t\tfillColor: PropTypes.string\n  \t\t\t})\n  \t\t})\n  \t),\n  \tname: PropTypes.string\n  })\n  }; */\n}","map":{"version":3,"sources":["/Users/Danny/Documents/student-portal2/src/components/body/Body.js"],"names":["React","Component","PropTypes","isEqual","ImageMapper","MAP","MaleBody","Body","load","setState","msg","clicked","area","shape","JSON","stringify","coords","clickedOutside","evt","x","nativeEvent","layerX","y","layerY","moveOnImage","moveMsg","enterArea","hoveredArea","leaveArea","name","moveOnArea","getTipPosition","top","center","left","render","position","URL","_","state","codeDetails","display","stylindDetails"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport isEqual from \"react-fast-compare\";\nimport { ImageMapper,MAP } from 'react-image-mapper';\nimport  MaleBody  from '/Users/Danny/Documents/student-portal2/src/images/MaleBody.jpg';\n\n\nexport default class Body extends Component {\n    // getInitialState() {\n\t// \treturn { hoveredArea: null, msg: null, moveMsg: null };\n\t// }\n\tload() {\n\t\tthis.setState({ msg: \"Interact with image !\" });\n\t}\n\tclicked(area) {\n\t\tthis.setState({\n\t\t\tmsg: `You clicked on ${area.shape} at coords ${JSON.stringify(\n\t\t\t\tarea.coords\n\t\t\t)} !`\n\t\t});\n\t}\n\tclickedOutside(evt) {\n\t\tconst coords = { x: evt.nativeEvent.layerX, y: evt.nativeEvent.layerY };\n\t\tthis.setState({\n\t\t\tmsg: `You clicked on the image at coords ${JSON.stringify(coords)} !`\n\t\t});\n\t}\n\tmoveOnImage(evt) {\n\t\tconst coords = { x: evt.nativeEvent.layerX, y: evt.nativeEvent.layerY };\n\t\tthis.setState({\n\t\t\tmoveMsg: `You moved on the image at coords ${JSON.stringify(coords)} !`\n\t\t});\n\t}\n\tenterArea(area) {\n\t\tthis.setState({ hoveredArea: area });\n\t}\n\tleaveArea(area) {\n\t\tthis.setState({\n\t\t\thoveredArea: null,\n\t\t\tmsg: `You leaved ${area.shape} ${area.name} at coords ${JSON.stringify(\n\t\t\t\tarea.coords\n\t\t\t)} !`\n\t\t});\n\t}\n\tmoveOnArea(area, evt) {\n\t\tconst coords = { x: evt.nativeEvent.layerX, y: evt.nativeEvent.layerY };\n\t\tthis.setState({\n\t\t\tmoveMsg: `You moved on ${area.shape} ${\n\t\t\t\tarea.name\n\t\t\t} at coords ${JSON.stringify(coords)} !`\n\t\t});\n\t}\n\n\tgetTipPosition(area) {\n\t\treturn { top: `${area.center[1]}px`, left: `${area.center[0]}px` };\n\t}\n    render() {\n        return (\n            <div className=\"grid\">\n\t\t\t\t<div className=\"presenter\">\n\t\t\t\t\t<div style={{ position: \"relative\" }}>\n\t\t\t\t\t\t<ImageMapper\n\t\t\t\t\t\t\tsrc={URL}\n\t\t\t\t\t\t\tmap={MAP}\n\t\t\t\t\t\t\twidth={500}\n\t\t\t\t\t\t\tonLoad={() => this.load()}\n\t\t\t\t\t\t\tonClick={area => this.clicked(area)}\n\t\t\t\t\t\t\tonMouseEnter={area => this.enterArea(area)}\n\t\t\t\t\t\t\tonMouseLeave={area => this.leaveArea(area)}\n\t\t\t\t\t\t\tonMouseMove={(area, _, evt) => this.moveOnArea(area, evt)}\n\t\t\t\t\t\t\tonImageClick={evt => this.clickedOutside(evt)}\n\t\t\t\t\t\t\tonImageMouseMove={evt => this.moveOnImage(evt)}\n\t\t\t\t\t\t\tlineWidth={4}\n\t\t\t\t\t\t\tstrokeColor={\"white\"}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{this.state.hoveredArea && (\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tclassName=\"tooltip\"\n\t\t\t\t\t\t\t\tstyle={{ ...this.getTipPosition(this.state.hoveredArea) }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{this.state.hoveredArea && this.state.hoveredArea.name}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<pre className=\"message\">\n\t\t\t\t\t\t{this.state.msg ? this.state.msg : null}\n\t\t\t\t\t</pre>\n\t\t\t\t\t<pre>{this.state.moveMsg ? this.state.moveMsg : null}</pre>\n\t\t\t\t</div>\n\n                <div className=\"source\">\n\t\t\t\t\t<h2>Example with custom tooltips :</h2>\n\t\t\t\t\t<p>(message logic is not present, to keep it clear)</p>\n\t\t\t\t\t<pre>\n\t\t\t\t\t\t<code>\n\t\t\t\t\t\t\t{'<div className=\"container\">\\n' +\n\t\t\t\t\t\t\t\t\"    <ImageMapper src={URL} map={MAP} width={500}\\n\" +\n\t\t\t\t\t\t\t\t\"    \tonLoad={() => this.load()}\\n\" +\n\t\t\t\t\t\t\t\t\"    \tonClick={area => this.clicked(area)}\\n\" +\n\t\t\t\t\t\t\t\t\"    \tonMouseEnter={area => this.enterArea(area)}\\n\" +\n\t\t\t\t\t\t\t\t\"    \tonMouseLeave={area => this.leaveArea(area)}\\n\" +\n\t\t\t\t\t\t\t\t\"    \tonMouseMove={(area, _, evt) => this.moveOnArea(area, evt)}\\n\" +\n\t\t\t\t\t\t\t\t\"    \tonImageClick={evt => this.clickedOutside(evt)}\\n\" +\n\t\t\t\t\t\t\t\t\"    \tonImageMouseMove={evt => this.moveOnImage(evt)}\\n\" +\n\t\t\t\t\t\t\t\t\"\t\tlineWidth={4}\\n\" +\n\t\t\t\t\t\t\t\t\"\t\tstrokeColor={\\\"white\\\"}\\n\" +\n\t\t\t\t\t\t\t\t\"    />\\n\" +\n\t\t\t\t\t\t\t\t\"    {\\n\" +\n\t\t\t\t\t\t\t\t\"    \tthis.state.hoveredArea &&\\n\" +\n\t\t\t\t\t\t\t\t'    \t<span className=\"tooltip\"\\n' +\n\t\t\t\t\t\t\t\t\"    \t    style={{ ...this.getTipPosition(this.state.hoveredArea)}}>\\n\" +\n\t\t\t\t\t\t\t\t\"    \t\t{ this.state.hoveredArea && this.state.hoveredArea.name}\\n\" +\n\t\t\t\t\t\t\t\t\"    \t</span>\\n\" +\n\t\t\t\t\t\t\t\t\"    }\\n\" +\n\t\t\t\t\t\t\t\t\"</div>\\n\"}\n\t\t\t\t\t\t</code>\n\t\t\t\t\t</pre>\n\t\t\t\t\t<pre>\n\t\t\t\t\t\t<code className=\"json\">\n\t\t\t\t\t\t\t{'URL = \"https://c1.staticflickr.com/5/4052/4503898393_303cfbc9fd_b.jpg\"\\n' +\n\t\t\t\t\t\t\t\t\"MAP = {\\n\" +\n\t\t\t\t\t\t\t\t'  name: \"my-map\",\\n' +\n\t\t\t\t\t\t\t\t\"  areas: [\\n\" +\n\t\t\t\t\t\t\t\t'    { name: \"1\", shape: \"poly\", coords: [25,33,27,300,128,240,128,94], preFillColor: \"green\", fillColor: \"#0000ff\", },\\n' +\n\t\t\t\t\t\t\t\t'    { name: \"2\", shape: \"poly\", coords: [219,118,220,210,283,210,284,119], preFillColor: \"pink\", lineWidth: 10, strokeColor: \"#0000ff\" },\\n' +\n\t\t\t\t\t\t\t\t'    { name: \"3\", shape: \"poly\", coords: [381,241,383,94,462,53,457,282], preFillColor: \"yellow\", /*this is mandatory for stroke color to work*/ lineWidth: 10, strokeColor: \"#6afd09\" },\\n' +\n\t\t\t\t\t\t\t\t'    { name: \"4\", shape: \"poly\", coords: [245,285,290,285,274,239,249,238], preFillColor: \"red\"  },\\n' +\n\t\t\t\t\t\t\t\t'    { name: \"5\", shape: \"circle\", coords: [170, 100, 25 ], preFillColor: \"rgb(255,255,255,0.3)\", lineWidth: 2 },\\n' +\n\t\t\t\t\t\t\t\t'    { name: \"6\", shape: \"rect\", coords: [270, 100, 200, 50], lineWidth: 2, preFillColor: \"rgba(255, 255, 255, 0.3)\", strokeColor: \"#6afd09\" }\\n' +\n\t\t\t\t\t\t\t\t\"  ]\\n}\"}\n\t\t\t\t\t\t</code>\n\t\t\t\t\t</pre>\n\t\t\t\t\tHandler details : &nbsp;\n\t\t\t\t\t<span\n\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\tthis.setState({ codeDetails: !this.state.codeDetails })\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.state.codeDetails ? \"[-]\" : \"[+]\"}\n\t\t\t\t\t</span>\n\t\t\t\t\t<pre>\n\t\t\t\t\t\t<code\n\t\t\t\t\t\t\tclassName=\"js\"\n\t\t\t\t\t\t\tstyle={{ display: this.state.codeDetails ? \"block\" : \"none\" }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{\"enterArea(area) {\\n\" +\n\t\t\t\t\t\t\t\t\"    this.setState({ hoveredArea: area });\\n\" +\n\t\t\t\t\t\t\t\t\"}\\n\\n\" +\n\t\t\t\t\t\t\t\t\"leaveArea(area) {\\n\" +\n\t\t\t\t\t\t\t\t\"    this.setState({ hoveredArea: null });\\n\" +\n\t\t\t\t\t\t\t\t\"}\\n\\n\" +\n\t\t\t\t\t\t\t\t\"getTipPosition(area) {\\n\" +\n\t\t\t\t\t\t\t\t\"    return { top: `${area.center[1]}px`, left: `${area.center[0]}px` };\\n\" +\n\t\t\t\t\t\t\t\t\"}\\n\\n\"}\n\t\t\t\t\t\t</code>\n\t\t\t\t\t</pre>\n\t\t\t\t\tStyling details : &nbsp;\n\t\t\t\t\t<span\n\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\tthis.setState({ stylindDetails: !this.state.stylindDetails })\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.state.stylindDetails ? \"[-]\" : \"[+]\"}\n\t\t\t\t\t</span>\n\t\t\t\t\t<pre>\n\t\t\t\t\t\t<code\n\t\t\t\t\t\t\tclassName=\"css\"\n\t\t\t\t\t\t\tstyle={{ display: this.state.stylindDetails ? \"block\" : \"none\" }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{\".container {\\n\" +\n\t\t\t\t\t\t\t\t\"    position: relative;\\n\" +\n\t\t\t\t\t\t\t\t\"}\\n\\n\" +\n\t\t\t\t\t\t\t\t\".tooltip {\\n\" +\n\t\t\t\t\t\t\t\t\"    position: absolute;\\n\" +\n\t\t\t\t\t\t\t\t\"    color: #fff;\\n\" +\n\t\t\t\t\t\t\t\t\"    padding: 10px;\\n\" +\n\t\t\t\t\t\t\t\t\"    background: rgba(0,0,0,0.8);\\n\" +\n\t\t\t\t\t\t\t\t\"    transform: translate3d(-50%, -50%, 0);\\n\" +\n\t\t\t\t\t\t\t\t\"    border-radius: 5px;\\n\" +\n\t\t\t\t\t\t\t\t\"    pointer-events: none;\\n\" +\n\t\t\t\t\t\t\t\t\"    z-index: 1000;\\n\" +\n\t\t\t\t\t\t\t\t\"}\\n\"}\n\t\t\t\t\t\t</code>\n\t\t\t\t\t</pre>\n\t\t\t\t</div>\n\t\t\t</div>\n\n               \n        );\n    }\n}\n{/* ImageMapper.defaultProps = {\n\tactive: true,\n\tfillColor: \"rgba(255, 255, 255, 0.5)\",\n\tlineWidth: 1,\n\tmap: {\n\t\tareas: [],\n\t\tname: \"image-map-\" + Math.random()\n\t},\n\tstrokeColor: \"rgba(0, 0, 0, 0.5)\"\n};\n\nImageMapper.propTypes = {\n\tactive: PropTypes.bool,\n\tfillColor: PropTypes.string,\n\theight: PropTypes.number,\n\timgWidth: PropTypes.number,\n\tlineWidth: PropTypes.number,\n\tsrc: PropTypes.string.isRequired,\n\tstrokeColor: PropTypes.string,\n\twidth: PropTypes.number,\n\n\tonClick: PropTypes.func,\n\tonMouseMove: PropTypes.func,\n\tonImageClick: PropTypes.func,\n\tonImageMouseMove: PropTypes.func,\n\tonLoad: PropTypes.func,\n\tonMouseEnter: PropTypes.func,\n\tonMouseLeave: PropTypes.func,\n\n\tmap: PropTypes.shape({\n\t\tareas: PropTypes.arrayOf(\n\t\t\tPropTypes.shape({\n\t\t\t\tarea: PropTypes.shape({\n\t\t\t\t\tcoords: PropTypes.arrayOf(PropTypes.number),\n\t\t\t\t\thref: PropTypes.string,\n\t\t\t\t\tshape: PropTypes.string,\n\t\t\t\t\tpreFillColor: PropTypes.string,\n\t\t\t\t\tfillColor: PropTypes.string\n\t\t\t\t})\n\t\t\t})\n\t\t),\n\t\tname: PropTypes.string\n\t})\n}; */}\n\n\n"]},"metadata":{},"sourceType":"module"}