{"ast":null,"code":"var _jsxFileName = \"/Users/Danny/Documents/Capstone/student-portal2/src/components/modal/Modal.js\";\nimport React from 'react';\nimport './Modal.css';\n\nconst Modal = props => {\n  let confirmSite = event => {\n    props.beginSiteTracker();\n    props.areasSubmitHandler();\n    props.close();\n  };\n\n  console.log(\"Timer props -> \", props.selectedArea.date);\n  let initialDate = new Date(props.selectedArea.date);\n  let expireDate = new Date(initialDate);\n  console.log(\"expire date ::> \", expireDate);\n  let modalMessage = React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-wrapper\",\n    style: {\n      transform: props.show ? 'translateY(0vh)' : 'translateY(-100vh)',\n      opacity: props.show ? '1' : '0'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Infusion Tracker\"), React.createElement(\"span\", {\n    className: \"close-modal-btn\",\n    onClick: cancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"\\xD7\")), React.createElement(\"div\", {\n    className: \"modal-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"This site expires on:\"), expireDate.getMonth(), \"/\", expireDate.getDate() + 3), React.createElement(\"div\", {\n    className: \"modal-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })));\n\n  if (props.selectedArea.savedArea = true) {\n    console.log(props.selectedArea.savedArea);\n    modalMessage = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-wrapper\",\n      style: {\n        transform: props.show ? 'translateY(0vh)' : 'translateY(-100vh)',\n        opacity: props.show ? '1' : '0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Infusion Tracker\"), React.createElement(\"span\", {\n      className: \"close-modal-btn\",\n      onClick: cancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"\\xD7\")), React.createElement(\"div\", {\n      className: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"This site expires on:\"), expireDate.getMonth(), \"/\", expireDate.getDate() + 3), React.createElement(\"div\", {\n      className: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })));\n  }\n\n  if (props.selectedArea.savedArea = false) {\n    modalMessage = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-wrapper\",\n      style: {\n        transform: props.show ? 'translateY(0vh)' : 'translateY(-100vh)',\n        opacity: props.show ? '1' : '0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, props.children, \"Do you want to confirm this as your current infusion site?\"), React.createElement(\"div\", {\n      className: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Infusion Tracker\"), React.createElement(\"span\", {\n      className: \"close-modal-btn\",\n      onClick: cancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"\\xD7\"))), React.createElement(\"div\", {\n      className: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn-cancel\",\n      onClick: cancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(\"button\", {\n      className: \"btn-continue\",\n      onClick: confirmSite,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Confirm\")));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, modalMessage);\n};\n\nexport default Modal;","map":{"version":3,"sources":["/Users/Danny/Documents/Capstone/student-portal2/src/components/modal/Modal.js"],"names":["React","Modal","props","confirmSite","event","beginSiteTracker","areasSubmitHandler","close","console","log","selectedArea","date","initialDate","Date","expireDate","modalMessage","transform","show","opacity","cancel","getMonth","getDate","savedArea","children"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Modal.css';\n\n\n\nconst Modal = (props) => {\n\n    \n\n\n\n    let confirmSite = (event) => {\n        props.beginSiteTracker()\n        props.areasSubmitHandler()\n        props.close()\n\n    };\n    console.log(\"Timer props -> \", props.selectedArea.date)\n    let initialDate  = new Date(props.selectedArea.date)\n    let expireDate = new Date(initialDate)\n    console.log(\"expire date ::> \", expireDate)\n\n\n    let modalMessage = (\n        <div>\n            <div className=\"modal-wrapper\"\n                style={{\n                    transform: props.show ? 'translateY(0vh)' : 'translateY(-100vh)',\n                    opacity: props.show ? '1' : '0'\n                }}>\n                <div className=\"modal-header\">\n                    <h3>Infusion Tracker</h3>\n                    <span className=\"close-modal-btn\" onClick={cancel}>×</span>\n                </div>\n\n                 <div className=\"modal-body\">\n                    <p>This site expires on:</p>\n                {expireDate.getMonth()}/{expireDate.getDate()+3} \n                   \n                   \n                 </div> \n                <div className=\"modal-body\">     \n                 </div>\n                 </div>\n             </div>\n\n    ) \n    if (props.selectedArea.savedArea=true){\n        console.log(props.selectedArea.savedArea)\n        modalMessage=(\n            <div>\n            <div className=\"modal-wrapper\"\n                style={{\n                    transform: props.show ? 'translateY(0vh)' : 'translateY(-100vh)',\n                    opacity: props.show ? '1' : '0'\n                }}>\n                <div className=\"modal-header\">\n                    <h3>Infusion Tracker</h3>\n                    <span className=\"close-modal-btn\" onClick={cancel}>×</span>\n                </div>\n\n                 <div className=\"modal-body\">\n                    <p>This site expires on:</p>\n                {expireDate.getMonth()}/{expireDate.getDate()+3} \n                   \n                   \n                 </div> \n                <div className=\"modal-body\">     \n                 </div>\n                 </div>\n             </div>\n\n        )\n        \n    }\n    if(props.selectedArea.savedArea=false)\n    {\n        modalMessage =( \n            <div>\n                <div className=\"modal-wrapper\"\n                style={{\n                    transform: props.show ? 'translateY(0vh)' : 'translateY(-100vh)',\n                    opacity: props.show ? '1' : '0'\n                }}></div>\n        <div className=\"modal-body\">\n                <p>\n                    {props.children}\n                    Do you want to confirm this as your current infusion site?\n                </p>\n                <div className=\"modal-header\">\n                    <h3>Infusion Tracker</h3>\n                    <span className=\"close-modal-btn\" onClick={cancel}>×</span>\n                </div>\n            </div>\n            <div className=\"modal-footer\">\n                <button className=\"btn-cancel\" onClick={cancel}>Cancel</button>\n                <button className=\"btn-continue\" onClick={confirmSite}>Confirm</button>\n            </div>\n            </div>\n        )\n    }\n\n    \n   \n  \n\n    return (\n        <div>\n        \n                {modalMessage}\n               \n                \n            </div>\n        \n    )\n\n}\n\nexport default Modal;\n\n"]},"metadata":{},"sourceType":"module"}