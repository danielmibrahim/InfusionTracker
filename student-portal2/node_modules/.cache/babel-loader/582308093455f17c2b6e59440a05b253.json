{"ast":null,"code":"var _jsxFileName = \"/Users/Danny/Documents/student-portal2/src/components/body/Body.js\";\nimport React, { Component } from 'react';\nimport ImageMapper from 'react-image-mapper';\nimport MaleBody from '/Users/Danny/Documents/student-portal2/src/images/MaleBody.jpg';\nimport Modal from '../modal/Modal';\n\nclass Body extends Component {\n  constructor() {\n    super();\n\n    this.openModalHandler = area => {\n      this.setState({\n        isShowing: true\n      });\n    };\n\n    this.updateArea = evt => {\n      let newArea = {\n        name: \"1\",\n        shape: \"circle\",\n        coords: [evt.nativeEvent.layerX, evt.nativeEvent.layerY, 3],\n        fillColor: this.state.preFillColor,\n        preFillColor: this.state.preFillColor\n      }; // const areas = this.state.areas\n\n      this.setState({\n        areas: [...this.state.areas, newArea]\n      });\n    };\n\n    this.closeModalHandler = () => {\n      this.setState({\n        isShowing: false\n      });\n    };\n\n    this.beginSiteTracker = () => {\n      this.setState({\n        preFillColor: \"green\"\n      });\n    };\n\n    this.state = {\n      isShowing: false,\n      preFillColor: \"white\",\n      areas: []\n    };\n  }\n\n  render() {\n    console.log(this.state);\n    let MAP = {\n      name: \"my-map\",\n      areas: this.state.areas // areas: [\n      //   { name: \"1\", shape: \"circle\", coords: [132, 181, 3 ], fillColor: this.state.preFillColor, preFillColor: this.state.preFillColor  },\n      //   { name: \"2\", shape: \"circle\", coords: [145, 181, 3 ], fillColor: this.state.preFillColor, preFillColor: this.state.preFillColor  },\n      //   { name: \"3\", shape: \"circle\", coords: [191, 182, 3 ], fillColor: this.state.preFillColor, preFillColor: this.state.preFillColor  },\n      // ]\n\n    };\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.isShowing,\n      close: this.closeModalHandler,\n      beginSiteTracker: this.beginSiteTracker,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Do you want to confirm this as your current infusion site location?\"), React.createElement(ImageMapper, {\n      src: MaleBody,\n      fillColor: this.state.preFillColor,\n      map: MAP,\n      width: 610,\n      height: 435,\n      button: true,\n      className: \"open-modal-btn\",\n      onClick: area => this.openModalHandler(area),\n      onImageClick: evt => this.updateArea(evt),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.state.isShowing ? React.createElement(\"div\", {\n      onClick: this.closeModalHandler,\n      className: \"back-drop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }) : null));\n  }\n\n}\n\nexport default Body;","map":{"version":3,"sources":["/Users/Danny/Documents/student-portal2/src/components/body/Body.js"],"names":["React","Component","ImageMapper","MaleBody","Modal","Body","constructor","openModalHandler","area","setState","isShowing","updateArea","evt","newArea","name","shape","coords","nativeEvent","layerX","layerY","fillColor","state","preFillColor","areas","closeModalHandler","beginSiteTracker","render","console","log","MAP"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport  ImageMapper from 'react-image-mapper';\nimport  MaleBody  from '/Users/Danny/Documents/student-portal2/src/images/MaleBody.jpg';\nimport Modal from '../modal/Modal';\n\nclass Body extends Component {\n\tconstructor() {\n        super();\n\n\n        this.state = {\n\t\t\tisShowing: false,\n\t\t\tpreFillColor: \"white\",\n\t\t\tareas: []\n\t\t}\n\t\t\n    }\n\n\t\n    openModalHandler = (area) => {\n        this.setState({\n            isShowing: true\n\t\t});\n    }\n\n\tupdateArea = (evt) => {\n\t\tlet newArea = { name: \"1\", shape: \"circle\", coords: [evt.nativeEvent.layerX, evt.nativeEvent.layerY , 3 ], fillColor: this.state.preFillColor, preFillColor: this.state.preFillColor  }\n\t\t// const areas = this.state.areas\n\t\tthis.setState(\n\t\t\t{areas: [...this.state.areas, newArea]}\n\t\t)\n\n    }\n\n\n    closeModalHandler = () => {\n        this.setState({\n            isShowing: false\n        });\n\t}\n\t\n\t\n\tbeginSiteTracker = () => {\n\n\t\tthis.setState({ preFillColor: \"green\"\t\t\n\t\n\t});\n\n\t\n\t}\n\t\n\n    render() {\n\t\tconsole.log(this.state)\n\t\t\n\n\t\t\n       let  MAP ={\n\t\t\tname: \"my-map\",\n\t\t\tareas: this.state.areas\n            // areas: [\n            //   { name: \"1\", shape: \"circle\", coords: [132, 181, 3 ], fillColor: this.state.preFillColor, preFillColor: this.state.preFillColor  },\n\t\t\t//   { name: \"2\", shape: \"circle\", coords: [145, 181, 3 ], fillColor: this.state.preFillColor, preFillColor: this.state.preFillColor  },\n\t\t\t//   { name: \"3\", shape: \"circle\", coords: [191, 182, 3 ], fillColor: this.state.preFillColor, preFillColor: this.state.preFillColor  },\n\n\t\t\t// ]\n          }\n\t\t\n\t\t\n\t\t  return (\n\t\t\t<div className=\"container\">\n\t\t\t\t\n\t\t\t\t<Modal\n\t\t\t\tshow={this.state.isShowing}\n\t\t\t\tclose={this.closeModalHandler}\n\t\t\t\tbeginSiteTracker={this.beginSiteTracker}\n\t\t\t\t>\n\t\t\t\t\tDo you want to confirm this as your current infusion site location?\n\t\t\t\n\t\t\t\t\t</Modal>\n\t\t\n\t\t\t\t\t\n\t\t\t<ImageMapper src={MaleBody} fillColor={this.state.preFillColor} map={MAP} width={610} height={435} \n\tbutton className=\"open-modal-btn\" \n\tonClick={(area) => this.openModalHandler(area)}\n\tonImageClick={(evt) => this.updateArea(evt)}\n    >\n\t\t\n\t\t{ this.state.isShowing ? <div onClick={this.closeModalHandler} className=\"back-drop\"></div> : null }\n\n\t\t\t</ImageMapper>\n    </div>\n\t\t\t\n\n\t\n\n\t\n\n\t\n);\n}\n}\n\n\nexport default Body;"]},"metadata":{},"sourceType":"module"}