{"ast":null,"code":"var _jsxFileName = \"/Users/Danny/Documents/student-portal2/src/components/body/Body.js\";\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport isEqual from \"react-fast-compare\";\nimport ImageMapper from 'react-image-mapper';\nimport MaleBody from '/Users/Danny/Documents/student-portal2/src/images/MaleBody.jpg';\nimport Modal from '../modal/Modal';\n\nclass Body extends Component {\n  constructor() {\n    super();\n\n    this.openModalHandler = () => {\n      this.setState({\n        isShowing: true\n      });\n    };\n\n    this.closeModalHandler = () => {\n      this.setState({\n        isShowing: false\n      });\n    };\n\n    this.siteTracker = () => {\n      this.name({});\n    };\n\n    this.state = {\n      isShowing: false\n    };\n  }\n\n  render() {\n    let MAP = {\n      name: \"my-map\",\n      areas: [{\n        name: \"5\",\n        shape: \"circle\",\n        coords: [136, 181, 5],\n        preFillColor: \"\"\n      }]\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      className: \"modal\",\n      show: this.state.isShowing,\n      close: this.closeModalHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Do you want to confirm this as your current infusion site location?\"), React.createElement(ImageMapper, {\n      src: MaleBody,\n      map: MAP,\n      width: 610,\n      height: 435,\n      button: true,\n      className: \"open-modal-btn\",\n      onClick: this.openModalHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.state.isShowing ? React.createElement(\"div\", {\n      onClick: this.closeModalHandler,\n      className: \"back-drop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }) : null), React.createElement(Timer, {\n      initialTime: 55000,\n      direction: \"backward\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, () => React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Timer.Days, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), \" days\", React.createElement(Timer.Hours, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), \" hours\", React.createElement(Timer.Minutes, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), \" minutes\", React.createElement(Timer.Seconds, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), \" seconds\", React.createElement(Timer.Milliseconds, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), \" milliseconds\")));\n  }\n\n}\n\nexport default Body;","map":{"version":3,"sources":["/Users/Danny/Documents/student-portal2/src/components/body/Body.js"],"names":["React","Component","PropTypes","isEqual","ImageMapper","MaleBody","Modal","Body","constructor","openModalHandler","setState","isShowing","closeModalHandler","siteTracker","name","state","render","MAP","areas","shape","coords","preFillColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAQC,WAAR,MAAyB,oBAAzB;AACA,OAAQC,QAAR,MAAuB,gEAAvB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,MAAMC,IAAN,SAAmBN,SAAnB,CAA6B;AAC5BO,EAAAA,WAAW,GAAG;AACP;;AADO,SAQXC,gBARW,GAQQ,MAAM;AACrB,WAAKC,QAAL,CAAc;AACVC,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,KAZU;;AAAA,SAcXC,iBAdW,GAcS,MAAM;AACtB,WAAKF,QAAL,CAAc;AACVC,QAAAA,SAAS,EAAE;AADD,OAAd;AAGN,KAlBa;;AAAA,SAoBdE,WApBc,GAoBA,MAAM;AACnB,WAAKC,IAAL,CAAU,EAAV;AAIA,KAzBa;;AAGP,SAAKC,KAAL,GAAa;AACTJ,MAAAA,SAAS,EAAE;AADF,KAAb;AAGH;;AAqBDK,EAAAA,MAAM,GAAG;AAIN,QAAKC,GAAG,GAAE;AACLH,MAAAA,IAAI,EAAE,QADD;AAELI,MAAAA,KAAK,EAAE,CACL;AAAEJ,QAAAA,IAAI,EAAE,GAAR;AAAaK,QAAAA,KAAK,EAAE,QAApB;AAA8BC,QAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,CAAX,CAAtC;AAAsDC,QAAAA,YAAY,EAAE;AAApE,OADK;AAFF,KAAV;AAQH,WACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD;AACC,MAAA,SAAS,EAAC,OADX;AAEC,MAAA,IAAI,EAAE,KAAKN,KAAL,CAAWJ,SAFlB;AAGC,MAAA,KAAK,EAAE,KAAKC,iBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6EADA,EAQA,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEP,QAAlB;AAA4B,MAAA,GAAG,EAAEY,GAAjC;AAAsC,MAAA,KAAK,EAAE,GAA7C;AAAkD,MAAA,MAAM,EAAE,GAA1D;AACF,MAAA,MAAM,MADJ;AACK,MAAA,SAAS,EAAC,gBADf;AACgC,MAAA,OAAO,EAAE,KAAKR,gBAD9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGC,KAAKM,KAAL,CAAWJ,SAAX,GAAuB;AAAK,MAAA,OAAO,EAAE,KAAKC,iBAAnB;AAAsC,MAAA,SAAS,EAAC,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvB,GAA4F,IAH7F,CARA,EAcQ,oBAAC,KAAD;AACP,MAAA,WAAW,EAAE,KADN;AAEP,MAAA,SAAS,EAAC,UAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIN,MACG,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,WAEI,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,YAGI,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,cAII,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,cAKI,oBAAC,KAAD,CAAO,YAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,kBALG,CAdR,CADC;AAmCH;;AA3E4B;;AA+E7B,eAAeL,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport isEqual from \"react-fast-compare\";\nimport  ImageMapper from 'react-image-mapper';\nimport  MaleBody  from '/Users/Danny/Documents/student-portal2/src/images/MaleBody.jpg';\nimport Modal from '../modal/Modal';\n\nclass Body extends Component {\n\tconstructor() {\n        super();\n\n        this.state = {\n            isShowing: false\n        }\n    }\n\n    openModalHandler = () => {\n        this.setState({\n            isShowing: true\n        });\n    }\n\n    closeModalHandler = () => {\n        this.setState({\n            isShowing: false\n        });\n\t}\n\t\n\tsiteTracker = () => {\n\t\tthis.name({\n\n\n\t\t});\n\t}\n\n    render() {\n\t\t\n\n\t\t\n       let  MAP ={\n            name: \"my-map\",\n            areas: [\n              { name: \"5\", shape: \"circle\", coords: [136, 181, 5 ], preFillColor: \"\"   },\n            ]\n          }\n\t\t\n\t\t\n\t\t  return (\n\t\t\t<div>\n\t\t\t<Modal\n\t\t\t\tclassName=\"modal\"\n\t\t\t\tshow={this.state.isShowing}\n\t\t\t\tclose={this.closeModalHandler}>\n\t\t\t\t\tDo you want to confirm this as your current infusion site location?\n\t\t\t</Modal>\n\n\t\t\t<ImageMapper src={MaleBody} map={MAP} width={610} height={435} \n\tbutton className=\"open-modal-btn\" onClick={this.openModalHandler}\n    >\n\t\t{ this.state.isShowing ? <div onClick={this.closeModalHandler} className=\"back-drop\"></div> : null }\n\n\t\t\t</ImageMapper>\n           <Timer\n    initialTime={55000}\n    direction=\"backward\"\n>\n    {() => (\n        <React.Fragment>\n            <Timer.Days /> days\n            <Timer.Hours /> hours\n            <Timer.Minutes /> minutes\n            <Timer.Seconds /> seconds\n            <Timer.Milliseconds /> milliseconds\n        </React.Fragment>\n    )}\n</Timer>\n\t\n\t</div>\n\t\n\n\t\n);\n}\n}\n\n\nexport default Body;"]},"metadata":{},"sourceType":"module"}