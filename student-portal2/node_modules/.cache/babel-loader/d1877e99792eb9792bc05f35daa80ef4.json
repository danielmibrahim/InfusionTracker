{"ast":null,"code":"var _jsxFileName = \"/Users/Danny/Documents/student-portal2/src/log-in/LogIn.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\n\nclass LogIn extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      student: {\n        email: '',\n        password: ''\n      }\n    };\n\n    this.signInSubmitHandler = event => {\n      event.preventDefault();\n      const student = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      axios.post(\"http://localhost:8080/login\", student).then(response => {\n        //storing the user's data inside the browser for future use \n        const loginStudent = response.data.email;\n        localStorage.setItem(\"loggedInStudent\", loginStudent); //navigate to home page \n\n        this.props.history.push('/');\n      }).catch(error => {\n        alert('Invalid Credentials');\n      });\n    };\n\n    this.signInChangeHandler = event => {\n      const key = event.target.name;\n      const value = event.target.value;\n      this.setState({\n        [key]: value\n      });\n    };\n\n    this.signOut = () => {\n      localStorage.removeItem(\"loggedInStudent\");\n      window.location.reload(false);\n    };\n  }\n\n  render() {\n    let dropDownList = React.createElement(\"li\", {\n      className: \"nav-item \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"nav-link\",\n      to: \"/sign-up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Sign Up  \"));\n    let signInSignOutForm = React.createElement(\"form\", {\n      onSubmit: this.signInSubmitHandler,\n      className: \"form-inline mt-2 mt-md-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    });\n\n    if (localStorage.getItem('loggedInStudent')) {\n      dropDownList = React.createElement(\"li\", {\n        className: \"nav-item \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"nav-link\",\n        to: \"/settings\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Settings  \"));\n      signInSignOutForm = React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.signOut,\n        className: \"btn btn-outline-success my-2 my-sm-0\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Sign Out\"));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"margin-bottom-50px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, signInSignOutForm);\n  }\n\n}\n\nexport default withRouter(LogIn);","map":{"version":3,"sources":["/Users/Danny/Documents/student-portal2/src/log-in/LogIn.js"],"names":["React","Component","Link","axios","withRouter","LogIn","state","student","email","password","signInSubmitHandler","event","preventDefault","post","then","response","loginStudent","data","localStorage","setItem","props","history","push","catch","error","alert","signInChangeHandler","key","target","name","value","setState","signOut","removeItem","window","location","reload","render","dropDownList","signInSignOutForm","getItem"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport {withRouter} from 'react-router-dom';\n\n\nclass LogIn extends Component {\n    state = {\n        student: {\n            email: '',\n            password: ''\n        }\n    }\n\n\n\nsignInSubmitHandler = (event) => {\n    event.preventDefault();\n    const student = { email: this.state.email, password: this.state.password }\n    axios.post(\"http://localhost:8080/login\", student).then(response => {\n        //storing the user's data inside the browser for future use \n        const loginStudent = response.data.email;\n        localStorage.setItem(\"loggedInStudent\", loginStudent);\n        //navigate to home page \n        this.props.history.push('/');\n    }).catch(error => {\n        alert('Invalid Credentials');    });\n}\n\nsignInChangeHandler = (event) => {\n    const key = event.target.name;\n    const value = event.target.value;\n    this.setState(\n        {\n            [key]: value\n        }\n    )\n}\nsignOut = () => {\n    localStorage.removeItem(\"loggedInStudent\");\n    window.location.reload(false)\n\n}\n\n    render() {\n        let dropDownList = (\n            <li className=\"nav-item \">\n                <Link className=\"nav-link\" to=\"/sign-up\">Sign Up  </Link>\n            </li>\n        )\n        let signInSignOutForm = (\n            <form onSubmit={this.signInSubmitHandler} className=\"form-inline mt-2 mt-md-0\">\n               \n            </form>\n        )\n        if(localStorage.getItem('loggedInStudent')){\n            dropDownList = (\n                <li className=\"nav-item \">\n                    <Link className=\"nav-link\" to=\"/settings\">Settings  </Link>\n                </li>\n            )\n            signInSignOutForm =(\n                \n                <div  className=\"container\">\n                <button onClick={this.signOut} className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Sign Out</button>\n            </div>\n            )\n        }\n        return (\n            <div className=\"margin-bottom-50px\">\n                        \n                        {signInSignOutForm}\n                    </div>\n        );\n    }\n}\n\nexport default withRouter (LogIn);"]},"metadata":{},"sourceType":"module"}