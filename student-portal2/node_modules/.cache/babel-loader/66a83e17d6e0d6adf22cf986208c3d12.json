{"ast":null,"code":"import _defineProperty from \"/Users/Danny/Documents/student-portal2/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/Danny/Documents/student-portal2/src/components/body/Body.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport isEqual from \"react-fast-compare\";\nimport { ImageMapper, MAP } from 'react-image-mapper';\nimport MaleBody from '/Users/Danny/Documents/student-portal2/src/images/MaleBody.jpg';\nexport default class Body extends Component {\n  getInitialState() {\n    return {\n      hoveredArea: null,\n      msg: null,\n      moveMsg: null\n    };\n  }\n\n  load() {\n    this.setState({\n      msg: \"Interact with image !\"\n    });\n  }\n\n  clicked(area) {\n    this.setState({\n      msg: \"You clicked on \".concat(area.shape, \" at coords \").concat(JSON.stringify(area.coords), \" !\")\n    });\n  }\n\n  clickedOutside(evt) {\n    const coords = {\n      x: evt.nativeEvent.layerX,\n      y: evt.nativeEvent.layerY\n    };\n    this.setState({\n      msg: \"You clicked on the image at coords \".concat(JSON.stringify(coords), \" !\")\n    });\n  }\n\n  moveOnImage(evt) {\n    const coords = {\n      x: evt.nativeEvent.layerX,\n      y: evt.nativeEvent.layerY\n    };\n    this.setState({\n      moveMsg: \"You moved on the image at coords \".concat(JSON.stringify(coords), \" !\")\n    });\n  }\n\n  enterArea(area) {\n    this.setState({\n      hoveredArea: area,\n      msg: \"You entered \".concat(area.shape, \" \").concat(area.name, \" at coords \").concat(JSON.stringify(area.coords), \" !\")\n    });\n  }\n\n  leaveArea(area) {\n    this.setState({\n      hoveredArea: null,\n      msg: \"You leaved \".concat(area.shape, \" \").concat(area.name, \" at coords \").concat(JSON.stringify(area.coords), \" !\")\n    });\n  }\n\n  moveOnArea(area, evt) {\n    const coords = {\n      x: evt.nativeEvent.layerX,\n      y: evt.nativeEvent.layerY\n    };\n    this.setState({\n      moveMsg: \"You moved on \".concat(area.shape, \" \").concat(area.name, \" at coords \").concat(JSON.stringify(coords), \" !\")\n    });\n  }\n\n  getTipPosition(area) {\n    return {\n      top: \"\".concat(area.center[1], \"px\"),\n      left: \"\".concat(area.center[0], \"px\")\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"presenter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        position: \"relative\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(ImageMapper, {\n      src: URL,\n      map: MAP,\n      width: 500,\n      onLoad: () => this.load(),\n      onClick: area => this.clicked(area),\n      onMouseEnter: area => this.enterArea(area),\n      onMouseLeave: area => this.leaveArea(area),\n      onMouseMove: (area, _, evt) => this.moveOnArea(area, evt),\n      onImageClick: evt => this.clickedOutside(evt),\n      onImageMouseMove: evt => this.moveOnImage(evt),\n      lineWidth: 4,\n      strokeColor: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), this.state.hoveredArea && React.createElement(\"span\", {\n      className: \"tooltip\",\n      style: _objectSpread({}, this.getTipPosition(this.state.hoveredArea)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.state.hoveredArea && this.state.hoveredArea.name)), React.createElement(\"pre\", {\n      className: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.state.msg ? this.state.msg : null), React.createElement(\"pre\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.state.moveMsg ? this.state.moveMsg : null)), React.createElement(\"div\", {\n      className: \"w3-half w3-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: MaleBody,\n      style: {\n        width: '75%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })));\n  }\n\n}\n{\n  /* ImageMapper.defaultProps = {\n  active: true,\n  fillColor: \"rgba(255, 255, 255, 0.5)\",\n  lineWidth: 1,\n  map: {\n  \tareas: [],\n  \tname: \"image-map-\" + Math.random()\n  },\n  strokeColor: \"rgba(0, 0, 0, 0.5)\"\n  };\n  ImageMapper.propTypes = {\n  active: PropTypes.bool,\n  fillColor: PropTypes.string,\n  height: PropTypes.number,\n  imgWidth: PropTypes.number,\n  lineWidth: PropTypes.number,\n  src: PropTypes.string.isRequired,\n  strokeColor: PropTypes.string,\n  width: PropTypes.number,\n  \tonClick: PropTypes.func,\n  onMouseMove: PropTypes.func,\n  onImageClick: PropTypes.func,\n  onImageMouseMove: PropTypes.func,\n  onLoad: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  \tmap: PropTypes.shape({\n  \tareas: PropTypes.arrayOf(\n  \t\tPropTypes.shape({\n  \t\t\tarea: PropTypes.shape({\n  \t\t\t\tcoords: PropTypes.arrayOf(PropTypes.number),\n  \t\t\t\thref: PropTypes.string,\n  \t\t\t\tshape: PropTypes.string,\n  \t\t\t\tpreFillColor: PropTypes.string,\n  \t\t\t\tfillColor: PropTypes.string\n  \t\t\t})\n  \t\t})\n  \t),\n  \tname: PropTypes.string\n  })\n  }; */\n}","map":{"version":3,"sources":["/Users/Danny/Documents/student-portal2/src/components/body/Body.js"],"names":["React","Component","PropTypes","isEqual","ImageMapper","MAP","MaleBody","Body","getInitialState","hoveredArea","msg","moveMsg","load","setState","clicked","area","shape","JSON","stringify","coords","clickedOutside","evt","x","nativeEvent","layerX","y","layerY","moveOnImage","enterArea","name","leaveArea","moveOnArea","getTipPosition","top","center","left","render","position","URL","_","state","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport isEqual from \"react-fast-compare\";\nimport { ImageMapper,MAP } from 'react-image-mapper';\nimport  MaleBody  from '/Users/Danny/Documents/student-portal2/src/images/MaleBody.jpg';\n\n\nexport default class Body extends Component {\n    getInitialState() {\n\t\treturn { hoveredArea: null, msg: null, moveMsg: null };\n\t}\n\tload() {\n\t\tthis.setState({ msg: \"Interact with image !\" });\n\t}\n\tclicked(area) {\n\t\tthis.setState({\n\t\t\tmsg: `You clicked on ${area.shape} at coords ${JSON.stringify(\n\t\t\t\tarea.coords\n\t\t\t)} !`\n\t\t});\n\t}\n\tclickedOutside(evt) {\n\t\tconst coords = { x: evt.nativeEvent.layerX, y: evt.nativeEvent.layerY };\n\t\tthis.setState({\n\t\t\tmsg: `You clicked on the image at coords ${JSON.stringify(coords)} !`\n\t\t});\n\t}\n\tmoveOnImage(evt) {\n\t\tconst coords = { x: evt.nativeEvent.layerX, y: evt.nativeEvent.layerY };\n\t\tthis.setState({\n\t\t\tmoveMsg: `You moved on the image at coords ${JSON.stringify(coords)} !`\n\t\t});\n\t}\n\tenterArea(area) {\n\t\tthis.setState({\n\t\t\thoveredArea: area,\n\t\t\tmsg: `You entered ${area.shape} ${area.name} at coords ${JSON.stringify(\n\t\t\t\tarea.coords\n\t\t\t)} !`\n\t\t});\n\t}\n\tleaveArea(area) {\n\t\tthis.setState({\n\t\t\thoveredArea: null,\n\t\t\tmsg: `You leaved ${area.shape} ${area.name} at coords ${JSON.stringify(\n\t\t\t\tarea.coords\n\t\t\t)} !`\n\t\t});\n\t}\n\tmoveOnArea(area, evt) {\n\t\tconst coords = { x: evt.nativeEvent.layerX, y: evt.nativeEvent.layerY };\n\t\tthis.setState({\n\t\t\tmoveMsg: `You moved on ${area.shape} ${\n\t\t\t\tarea.name\n\t\t\t} at coords ${JSON.stringify(coords)} !`\n\t\t});\n\t}\n\n\tgetTipPosition(area) {\n\t\treturn { top: `${area.center[1]}px`, left: `${area.center[0]}px` };\n\t}\n    render() {\n        return (\n            <div className=\"grid\">\n\t\t\t\t<div className=\"presenter\">\n\t\t\t\t\t<div style={{ position: \"relative\" }}>\n\t\t\t\t\t\t<ImageMapper\n\t\t\t\t\t\t\tsrc={URL}\n\t\t\t\t\t\t\tmap={MAP}\n\t\t\t\t\t\t\twidth={500}\n\t\t\t\t\t\t\tonLoad={() => this.load()}\n\t\t\t\t\t\t\tonClick={area => this.clicked(area)}\n\t\t\t\t\t\t\tonMouseEnter={area => this.enterArea(area)}\n\t\t\t\t\t\t\tonMouseLeave={area => this.leaveArea(area)}\n\t\t\t\t\t\t\tonMouseMove={(area, _, evt) => this.moveOnArea(area, evt)}\n\t\t\t\t\t\t\tonImageClick={evt => this.clickedOutside(evt)}\n\t\t\t\t\t\t\tonImageMouseMove={evt => this.moveOnImage(evt)}\n\t\t\t\t\t\t\tlineWidth={4}\n\t\t\t\t\t\t\tstrokeColor={\"white\"}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{this.state.hoveredArea && (\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tclassName=\"tooltip\"\n\t\t\t\t\t\t\t\tstyle={{ ...this.getTipPosition(this.state.hoveredArea) }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{this.state.hoveredArea && this.state.hoveredArea.name}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<pre className=\"message\">\n\t\t\t\t\t\t{this.state.msg ? this.state.msg : null}\n\t\t\t\t\t</pre>\n\t\t\t\t\t<pre>{this.state.moveMsg ? this.state.moveMsg : null}</pre>\n\t\t\t\t</div>\n\n                <div className=\"w3-half w3-container\">\n                                            <img src={MaleBody} style={{width:'75%'}}/>\n                                            </div>\n                </div>\n        );\n    }\n}\n{/* ImageMapper.defaultProps = {\n\tactive: true,\n\tfillColor: \"rgba(255, 255, 255, 0.5)\",\n\tlineWidth: 1,\n\tmap: {\n\t\tareas: [],\n\t\tname: \"image-map-\" + Math.random()\n\t},\n\tstrokeColor: \"rgba(0, 0, 0, 0.5)\"\n};\n\nImageMapper.propTypes = {\n\tactive: PropTypes.bool,\n\tfillColor: PropTypes.string,\n\theight: PropTypes.number,\n\timgWidth: PropTypes.number,\n\tlineWidth: PropTypes.number,\n\tsrc: PropTypes.string.isRequired,\n\tstrokeColor: PropTypes.string,\n\twidth: PropTypes.number,\n\n\tonClick: PropTypes.func,\n\tonMouseMove: PropTypes.func,\n\tonImageClick: PropTypes.func,\n\tonImageMouseMove: PropTypes.func,\n\tonLoad: PropTypes.func,\n\tonMouseEnter: PropTypes.func,\n\tonMouseLeave: PropTypes.func,\n\n\tmap: PropTypes.shape({\n\t\tareas: PropTypes.arrayOf(\n\t\t\tPropTypes.shape({\n\t\t\t\tarea: PropTypes.shape({\n\t\t\t\t\tcoords: PropTypes.arrayOf(PropTypes.number),\n\t\t\t\t\thref: PropTypes.string,\n\t\t\t\t\tshape: PropTypes.string,\n\t\t\t\t\tpreFillColor: PropTypes.string,\n\t\t\t\t\tfillColor: PropTypes.string\n\t\t\t\t})\n\t\t\t})\n\t\t),\n\t\tname: PropTypes.string\n\t})\n}; */}\n\n\n"]},"metadata":{},"sourceType":"module"}