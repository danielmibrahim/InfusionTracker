{"ast":null,"code":"var _jsxFileName = \"/Users/Danny/Documents/student-portal2/src/components/body/Body.js\";\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport isEqual from \"react-fast-compare\";\nimport ImageMapper from 'react-image-mapper';\nimport MaleBody from '/Users/Danny/Documents/student-portal2/src/images/MaleBody.jpg';\nimport Modal from '../modal/Modal';\n\nclass Body extends Component {\n  constructor() {\n    super();\n\n    this.openModalHandler = () => {\n      this.setState({\n        isShowing: true\n      });\n    };\n\n    this.closeModalHandler = () => {\n      this.setState({\n        isShowing: false\n      });\n    };\n\n    this.beginSiteTracker = () => {\n      this.setState({\n        preFillColor: 'green'\n      });\n    };\n\n    const Modal = props => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-wrapper\",\n        style: {\n          transform: props.show ? 'translateY(0vh)' : 'translateY(-100vh)',\n          opacity: props.show ? '1' : '0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Infusion Tracker\"), React.createElement(\"span\", {\n        className: \"close-modal-btn\",\n        onClick: props.close,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"\\xD7\")), React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, props.children)), React.createElement(\"div\", {\n        className: \"modal-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn-cancel\",\n        onClick: props.close,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(\"button\", {\n        className: \"btn-continue\",\n        onSubmit: this.beginSiteTracker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Confirm\"))));\n    };\n\n    this.state = {\n      isShowing: false\n    };\n  }\n\n  render() {\n    let MAP = {\n      name: \"my-map\",\n      areas: [{\n        name: \"5\",\n        shape: \"circle\",\n        coords: [136, 181, 5],\n        preFillColor: \"\"\n      }]\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      className: \"modal\",\n      show: this.state.isShowing,\n      close: this.closeModalHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Do you want to confirm this as your current infusion site location?\"), React.createElement(ImageMapper, {\n      src: MaleBody,\n      map: MAP,\n      width: 610,\n      height: 435,\n      button: true,\n      className: \"open-modal-btn\",\n      onClick: this.openModalHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.state.isShowing ? React.createElement(\"div\", {\n      onClick: this.closeModalHandler,\n      className: \"back-drop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }) : null));\n  }\n\n}\n\nexport default Body;","map":{"version":3,"sources":["/Users/Danny/Documents/student-portal2/src/components/body/Body.js"],"names":["React","Component","PropTypes","isEqual","ImageMapper","MaleBody","Modal","Body","constructor","openModalHandler","setState","isShowing","closeModalHandler","beginSiteTracker","preFillColor","props","transform","show","opacity","close","children","state","render","MAP","name","areas","shape","coords"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport isEqual from \"react-fast-compare\";\nimport  ImageMapper from 'react-image-mapper';\nimport  MaleBody  from '/Users/Danny/Documents/student-portal2/src/images/MaleBody.jpg';\nimport Modal from '../modal/Modal';\n\nclass Body extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\t\n\t\t\n\t\tconst Modal = (props) => {\n\t\t\t\n\t\t\treturn (\n\t\t\t\t\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"modal-wrapper\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\ttransform: props.show ? 'translateY(0vh)' : 'translateY(-100vh)',\n\t\t\t\t\t\t\topacity: props.show ? '1' : '0'\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<div className=\"modal-header\">\n\t\t\t\t\t\t\t<h3>Infusion Tracker</h3>\n\t\t\t\t\t\t\t<span className=\"close-modal-btn\" onClick={props.close}>Ã—</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"modal-body\">\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t{props.children}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"modal-footer\">\n\t\t\t\t\t\t\t<button className=\"btn-cancel\" onClick={props.close}>Cancel</button>\n\t\t\t\t\t\t\t<button className=\"btn-continue\" onSubmit={this.beginSiteTracker}>Confirm</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)\n\t\t\t\n\t\t}\n\n        this.state = {\n            isShowing: false\n        }\n    }\n\n    openModalHandler = () => {\n        this.setState({\n            isShowing: true\n        });\n    }\n\n    closeModalHandler = () => {\n        this.setState({\n            isShowing: false\n        });\n\t}\n\t\n\tbeginSiteTracker = () => {\n\t\tthis.setState({ preFillColor: 'green'\n\t\t\t\n\t\n\t\t});\n\t}\n\n\t\n\n    render() {\n\t\t\n\n\t\t\n       let  MAP ={\n            name: \"my-map\",\n            areas: [\n              { name: \"5\", shape: \"circle\", coords: [136, 181, 5 ], preFillColor: \"\"   },\n            ]\n          }\n\t\t\n\t\t\n\t\t  return (\n\t\t\t<div>\n\t\t\t\t\n\t\t\t\t<Modal\n\t\t\t\tclassName=\"modal\"\n\t\t\t\tshow={this.state.isShowing}\n\t\t\t\tclose={this.closeModalHandler}\n\t\t\t\t\n\t\t\t\t>\n\t\t\t\t\tDo you want to confirm this as your current infusion site location?\n\t\t\t\t\n\t\t\t</Modal>\n\n\t\t\t\t\n\t\t\n\n\t\t\t<ImageMapper src={MaleBody} map={MAP} width={610} height={435} \n\tbutton className=\"open-modal-btn\" onClick={this.openModalHandler}\n    >\n\t\t{ this.state.isShowing ? <div onClick={this.closeModalHandler} className=\"back-drop\"></div> : null }\n\n\t\t\t</ImageMapper>\n    \n\n\t\n\t</div>\n\t\n\n\t\n);\n}\n}\n\n\nexport default Body;"]},"metadata":{},"sourceType":"module"}